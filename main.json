{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "8927010465902870251"
    }
  },
  "parameters": {
    "prefixName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 10,
      "metadata": {
        "description": "Create a Function App with Storage Account, App Service Plan, and Application Insights"
      }
    },
    "envName": {
      "type": "string",
      "defaultValue": "dev",
      "minLength": 3,
      "maxLength": 10,
      "metadata": {
        "description": "Environment name for all resources. Must be between 3 and 10 characters."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "[format('{0}', parameters('envName'))]",
        "Project": "MoneyGlobProject",
        "Owner": "MoneyGlob",
        "Department": "IT"
      }
    },
    "blobStorageContainerNames": {
      "type": "array"
    },
    "tableStorageNames": {
      "type": "array"
    },
    "queueStorageNames": {
      "type": "array"
    }
  },
  "variables": {
    "functionAppName": "[format('{0}-{1}-{2}-func', toLower(parameters('prefixName')), toLower(parameters('envName')), uniqueString(parameters('location')))]",
    "storageAccountName": "[take(format('{0}{1}{2}', toLower(parameters('prefixName')), toLower(parameters('envName')), substring(uniqueString(parameters('location')), 0, 6)), 24)]",
    "appServicePlanName": "[format('{0}-{1}-{2}-asp', toLower(parameters('prefixName')), toLower(parameters('envName')), uniqueString(parameters('location')))]",
    "appInsightsName": "[format('{0}-{1}-{2}-ai', toLower(parameters('prefixName')), toLower(parameters('envName')), uniqueString(parameters('location')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "blobContainer",
        "count": "[length(parameters('blobStorageContainerNames'))]"
      },
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', parameters('blobStorageContainerNames')[copyIndex()])]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "tableStorage",
        "count": "[length(parameters('tableStorageNames'))]"
      },
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', parameters('tableStorageNames')[copyIndex()])]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "copy": {
        "name": "QueueStorage",
        "count": "[length(parameters('queueStorageNames'))]"
      },
      "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', parameters('queueStorageNames')[copyIndex()])]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "functionapp,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "DOTNET-ISOLATED|8.0",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightsName')), '2020-02-02').InstrumentationKey]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2022-03-01').defaultHostName]"
    }
  }
}